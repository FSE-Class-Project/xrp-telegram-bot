# Render Blueprint Specification
# XRP Telegram Bot - Webhook Mode with Existing Database

services:
  # Main Web Service - Backend API with integrated Telegram webhook handler
  - type: web
    name: xrp-bot-api
    runtime: python
    plan: starter  # or 'starter' for production ($7/month)
    region: oregon

    # Build configuration
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt

    # Start command - single worker for webhook handling
    startCommand: |
      uvicorn backend.main:app --host 0.0.0.0 --port $PORT --workers 1

    envVars:
      # Python Configuration
      - key: PYTHON_VERSION
        value: "3.11.0"

      # Application Environment
      - key: ENVIRONMENT
        value: production
      - key: DEBUG
        value: "false"
      - key: APP_NAME
        value: "XRP Telegram Bot"
      - key: APP_VERSION
        value: "1.0.0"

      # Database - Use existing database connection string from Render
      - key: DATABASE_URL
        sync: false  # Set manually in dashboard from existing DB

      # Security Keys (auto-generated on first deploy, then persist)
      - key: ENCRYPTION_KEY
        generateValue: true
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_ALGORITHM
        value: HS256
      - key: JWT_EXPIRATION_HOURS
        value: "24"

      # API Keys for internal security
      - key: BOT_API_KEY
        generateValue: true
      - key: ADMIN_API_KEY
        generateValue: true

      # Telegram Configuration (CRITICAL - Set in Render Dashboard)
      - key: TELEGRAM_BOT_TOKEN
        sync: false  # MUST set manually in Render dashboard

      # Telegram Webhook URL - will be auto-configured
      - key: TELEGRAM_WEBHOOK_URL
        value: https://xrp-bot-api.onrender.com

      - key: TELEGRAM_WEBHOOK_SECRET
        generateValue: true

      # XRP Ledger Configuration (TestNet)
      - key: XRP_NETWORK
        value: testnet
      - key: XRP_WEBSOCKET_URL
        value: wss://s.altnet.rippletest.net:51233
      - key: XRP_JSON_RPC_URL
        value: https://s.altnet.rippletest.net:51234
      - key: XRP_FAUCET_URL
        value: https://faucet.altnet.rippletest.net/accounts

      # API Configuration
      - key: API_HOST
        value: "0.0.0.0"
      - key: API_URL
        value: https://xrp-bot-api.onrender.com
      - key: API_PREFIX
        value: /api/v1

      # External APIs
      - key: PRICE_API_URL
        value: https://api.coingecko.com/api/v3
      - key: PRICE_API_KEY
        sync: false  # Optional - set in dashboard if you have one

      # Redis Configuration (optional caching)
      - key: REDIS_URL
        value: ""  # Leave empty if not using Redis
      - key: CACHE_TTL
        value: "300"

      # Rate Limiting
      - key: RATE_LIMIT_ENABLED
        value: "true"
      - key: RATE_LIMIT_REQUESTS
        value: "100"
      - key: RATE_LIMIT_PERIOD
        value: "60"

      # Monitoring (optional)
      - key: SENTRY_DSN
        value: ""  # Add Sentry DSN if using error tracking
      - key: LOG_LEVEL
        value: INFO

    # Health check configuration
    healthCheckPath: /health
    numInstances: 1

    # Deploy from prod branch
    autoDeploy: true
    branch: prod

    # Build configuration - trigger on relevant file changes
    buildFilter:
      paths:
        - backend/**
        - bot/**
        - requirements.txt
        - render.yaml
        - pyproject.toml
